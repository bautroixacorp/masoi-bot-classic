const { roomChatAll } = require('../Chat/Utils');
const gameIsNotEndCheck = require('../MainGame/gameIsNotEndCheck');
const dayVoteCheck = require('../Day/dayVoteCheck');

module.exports = async (gamef, bot, userRoom, witchSaved) => {
    let deathID = gamef.getRoom(userRoom).deathID;
    let deathTxt, deathRole;
    if (deathID != -1) {
        deathTxt = gamef.getRoom(userRoom).playersTxt[deathID];
        deathRole = gamef.roleTxt[gamef.getRoom(userRoom).getRoleByID(deathID)];
    }
    let dieCount = 0;

    let chatAllTxt = `\`\`\`\nüåûTr·ªùi s√°ng r·ªìi m·ªçi ng∆∞·ªùi d·∫≠y ƒëi\n`;

    // S√ìI C·∫ÆN
    if (!witchSaved && gamef.getRoom(userRoom).kill()) {
        dieCount++;
        chatAllTxt += `üî™ *${deathTxt}* ƒë√£ CH·∫æT!`;
        gamef.getRoom(userRoom).newLog(`üî™ *${deathTxt}* l√† ${deathRole} ƒë√£ b·ªã S√ìI c·∫Øn!`);
        console.log(`$ ROOM ${userRoom + 1} > ${deathTxt} DIED!`);
        if (gamef.getRoom(userRoom).players[deathID].role === 3) { //ng∆∞·ªùi ch·∫øt l√† th·ª£ sƒÉn
            dieCount++;
            let fireID = gamef.getRoom(userRoom).fireID;
            let deathFireTxt = gamef.getRoom(userRoom).playersTxt[fireID];
            chatAllTxt += `\nüî™ *${deathFireTxt}* ƒë√£ CH·∫æT!`;
            gamef.getRoom(userRoom).newLog(`üî™Th·ª£ sƒÉn ch·∫øt ƒë√£ ghim ${gamef.roleTxt[gamef.getRoom(userRoom).getRoleByID(fireID)]} *${deathFireTxt}*`);
            console.log(`$ ROOM ${userRoom + 1} > ${deathFireTxt} DIED!`);
        }
        if (gamef.getRoom(userRoom).cupidsID.indexOf(gamef.getRoom(userRoom).players[deathID].joinID) != -1) { //ng∆∞·ªùi ch·∫øt l√† c·∫∑p ƒë√¥i
            dieCount++;
            let die1Index = gamef.getRoom(userRoom).cupidsID.indexOf(gamef.getRoom(userRoom).players[deathID].joinID); // index trong m·∫£ng cupidsID
            let die2JoinID = gamef.getRoom(userRoom).cupidsID[die1Index == 1 ? 0 : 1];
            let die2User = gamef.getRoom(userRoom).getPlayer(die2JoinID);
            chatAllTxt += `\nüî™ *${die2User.first_name}* ƒë√£ CH·∫æT!`;
            gamef.getRoom(userRoom).newLog(`üî™T√¨nh y√™u ƒë√£ gi·∫øt ch·∫øt ${gamef.roleTxt[gamef.getRoom(userRoom).getRoleByID(die2User.id)]} *${die2User.id}: ${die2User.first_name}*`);
            console.log(`$ ROOM ${userRoom + 1} > ${die2User.first_name} DIED!`);
        }
    }
    // PH√ô TH·ª¶Y gi·∫øt
    if (gamef.getRoom(userRoom).witchKillID != undefined) {
        let killID = gamef.getRoom(userRoom).witchKillID;
        let deathByMagicTxt = gamef.getRoom(userRoom).playersTxt[killID];
        gamef.getRoom(userRoom).witchKillAction(async (witchKillID) => {
            dieCount++;
            chatAllTxt += `\nüî™ *${deathByMagicTxt}* ƒë√£ CH·∫æT!`;
            gamef.getRoom(userRoom).newLog(`üî™Ph√π th·ªßy ƒë√£ ph√π ph√©p ch·∫øt ${gamef.roleTxt[gamef.getRoom(userRoom).getRoleByID(witchKillID)]} *${deathByMagicTxt}*`);
            console.log(`$ ROOM ${userRoom + 1} > ${witchKillID}: ${deathByMagicTxt} DIED by witch!`);
        });
    }
    //l√† B√ÅN S√ìI
    if (deathID != -1 && gamef.getRoom(userRoom).players[deathID].role == -2) {
        let halfWolfjoinID = gamef.getRoom(userRoom).players[deathID].joinID;
        let halfWolfTxt = gamef.getRoom(userRoom).players[deathID].first_name;
        await bot.say(halfWolfjoinID, `\`\`\`\nB·∫°n ƒë√£ b·ªã s√≥i c·∫Øn!\nT·ª´ gi·ªù b·∫°n l√† üê∫S√ìI!\n\`\`\``);
        gamef.getRoom(userRoom).players[deathID].setRole(-1);
        gamef.getRoom(userRoom).newLog(`üê∫B√ÅN S√ìI *${halfWolfTxt}* b·ªã c·∫Øn v√† tr·ªü th√†nh üê∫S√ìI`);
        console.log(`$ ROOM ${userRoom + 1} > HALF WOLF!`);
    }

    //l√† GI√Ä L√ÄNG
    if (deathID != -1 && gamef.getRoom(userRoom).players[deathID].role == 6) {
        let oldManjoinID = gamef.getRoom(userRoom).players[deathID].joinID;
        let oldManTxt = gamef.getRoom(userRoom).players[deathID].first_name;
        if (gamef.getRoom(userRoom).oldManLive > 0) {
            await bot.say(oldManjoinID, `\`\`\`\nB·∫°n ƒë√£ b·ªã S√ìI c·∫Øn!\nB·∫°n ch·ªâ c√≤n 1 m·∫°ng!\nH√£y b·∫£o tr·ªçng =))\n\`\`\``);
            gamef.getRoom(userRoom).newLog(`üë¥GI√Ä L√ÄNG *${oldManTxt}* b·ªã c·∫Øn l·∫ßn 1!`);
        } else {
            await bot.say(oldManjoinID, `\`\`\`\nB·∫°n ƒë√£ b·ªã S√ìI c·∫Øn ch·∫øt!\nVƒ©nh bi·ªát =))\n\`\`\``);
            gamef.getRoom(userRoom).newLog(`üë¥GI√Ä L√ÄNG *${oldManTxt}* ƒë√£ CH·∫æT!`);
        }

        console.log(`$ ROOM ${userRoom + 1} > OLD MAN FIRST BLOOD!`);
    }

    if (dieCount == 0) {
        console.log(`$ ROOM ${userRoom + 1} > NOBODY DIED!`);
        gamef.getRoom(userRoom).newLog(`${deathID != -1 ? `üî™ *${deathTxt}* b·ªã c·∫Øn nh∆∞ng kh√¥ng ch·∫øt!\n` : `üéäS√≥i kh√¥ng th·ªëng nh·∫•t ƒë∆∞·ª£c s·ªë vote!\n`}üéäƒê√™m h√¥m ƒë·∫•y kh√¥ng ai ch·∫øt c·∫£!`);
        chatAllTxt += `üéäƒê√™m h√¥m qua kh√¥ng ai ch·∫øt c·∫£!`;
    }
    chatAllTxt += `\n\`\`\``;
    await roomChatAll(bot, gamef.getRoom(userRoom).players, 0, chatAllTxt);


    gameIsNotEndCheck(gamef, bot, userRoom, () => {
        let playersInRoomTxt = gamef.getRoom(userRoom).playersTxt.join(' ; ');
        roomChatAll(bot, gamef.getRoom(userRoom).players, 0, `‚è∞M·ªçi ng∆∞·ªùi c√≥ 1 ph√∫t th·∫£o lu·∫≠n!`);
        gamef.getRoom(userRoom).dayNightSwitch();

        let time = new Date(Date.now() + 1 * 60 * 1000);
        gamef.getRoom(userRoom).addSchedule(time, () => {
            roomChatAll(bot, gamef.getRoom(userRoom).players, 0, `‚è∞C√íN 1 PH√öT TH·∫¢O LU·∫¨N\nC√°c b·∫°n n√™n c√¢n nh·∫Øc kƒ©, tr√°nh lan man, nhanh ch√≥ng t√¨m ra k·∫ª ƒë√°ng nghi nh·∫•t!`);
            console.log(`$ ROOM ${userRoom + 1} > 1 MINUTE REMAINING`);
            let time = new Date(Date.now() + 1 * 60 * 1000);
            gamef.getRoom(userRoom).addSchedule(time, () => {
                roomChatAll(bot, gamef.getRoom(userRoom).players, 0, `‚è∞ƒê√£ h·∫øt th·ªùi gian, m·ªçi ng∆∞·ªùi c√≥ 1 PH√öT ƒë·ªÉ vote m·ªôt ng∆∞·ªùi ƒë·ªÉ treo c·ªï!\n/vote <id> ƒë·ªÉ treo c·ªï 1 ng∆∞·ªùi\n${playersInRoomTxt}`);
                gamef.getRoom(userRoom).chatOFF();
                console.log(`$ ROOM ${userRoom + 1} > END OF DISCUSSION!`);
                // t·ª± ƒë·ªông vote:
                gamef.getRoom(userRoom).players.forEach((p, index, players) => {
                    if (p && gamef.getRoom(userRoom).alivePlayer[p.joinID] && !gamef.getRoom(userRoom).roleDone[p.joinID]) {
                        let time = new Date(Date.now() + 60 * 1000);
                        players[index].addSchedule(time, () => {
                            if (p && gamef.getRoom(userRoom).alivePlayer[p.joinID]) {
                                roomChatAll(bot, gamef.getRoom(userRoom).players, 0, `üòà${p.first_name} ƒë√£ kh√¥ng k·ªãp b·ªè phi·∫øu!`);
                                gamef.getRoom(userRoom).autoRole(p.joinID, p.role);
                                // ki·ªÉm tra ƒë√£ VOTE XONG ch∆∞a?
                                gamef.func(dayVoteCheck, bot, userRoom);
                            }
                        });
                    }
                });
            });
        });
    });
}