const dayNotify = require('../Night/dayNotify');
const { roomChatAll } = require('../Chat/Utils');

function callWitch(gamef, bot, userRoom, deathID, deathTxt, thereIsOneDied) {
    const askForSaveKill = (convo, qreply = true, askTxt = `CALL ph√π th·ªßy improper way`) => {
        convo.ask(qreply ? {
            text: askTxt,
            quickReplies: ['/yes', '/no'],
        } : askTxt, async (payload, convo) => {
            if (!payload.message || !(/(y|Y)es/g.test(payload.message.text) || /(n|N)o/g.test(payload.message.text) || /skip/g.test(payload.message.text) || /\/kill\s[0-9]+/g.test(payload.message.text))) {
                convo.say(`\`\`\`\nKh√¥ng h·ª£p l·ªá!\n\`\`\``);
                askForSaveKill(convo, qreply, askTxt);
                return;
            } else {
                if (/(y|Y)es/g.test(payload.message.text)) { // c·ª©u
                    gamef.getRoom(userRoom).cancelSchedule();
                    if (gamef.getRoom(userRoom).witchSaveRemain) { // c√≤n quy·ªÅn c·ª©u
                        gamef.getRoom(userRoom).witchUseSave();
                        await convo.say(`üîÆB·∫°n ƒë√£ c·ª©u *${deathTxt}* th√†nh c√¥ng!`);
                        console.log(`$ ROOM ${userRoom + 1} > WITCH SAVE OK`);
                        gamef.getRoom(userRoom).newLog(`üîÆPh√π th·ªßy *${gamef.getRoom(userRoom).getPlayer(gamef.getRoom(userRoom).witchID).first_name}* ƒë√£ c·ª©u *${deathTxt}*!`);
                        convo.end();
                        dayNotify(gamef, bot, userRoom, true);
                    } else {
                        convo.say('```\nB·∫°n ƒë√£ h·∫øt quy·ªÅn c·ª©u\n```');
                    }
                } else if (/(n|N)o/g.test(payload.message.text)) { // kh√¥ng c·ª©u
                    gamef.getRoom(userRoom).cancelSchedule();
                    if (gamef.getRoom(userRoom).witchSaveRemain) { // c√≤n quy·ªÅn c·ª©u
                        convo.end();
                        dayNotify(gamef, bot, userRoom, false);
                    } else {
                        convo.say('```\nB·∫°n ƒë√£ h·∫øt quy·ªÅn c·ª©u\n```');
                    }
                } else { // kill
                    if (gamef.getRoom(userRoom).witchKillRemain) {
                        if (/\/kill\s[0-9]+/g.test(payload.message.text)) {  //kill
                            let voteID = payload.message.text.match(/[0-9]+/g)[0];
                            if (!gamef.getRoom(userRoom).witchKillVote(voteID)) {
                                convo.say(`\`\`\`\nB·∫°n kh√¥ng th·ªÉ gi·∫øt ng∆∞·ªùi ƒë√£ ch·∫øt!\n\`\`\``);
                                askForSaveKill(convo, qreply, askTxt);
                                return;
                            } else {
                                let witchKillName = gamef.getRoom(userRoom).playersTxt[voteID];
                                console.log(`$ ROOM ${userRoom + 1} > WITCH KILL: ${witchKillName}`);
                                gamef.getRoom(userRoom).newLog(`‚õîPh√π th·ªßy ${gamef.getRoom(userRoom).getPlayer(gamef.getRoom(userRoom).witchID).first_name} ƒë√£ gi·∫øt ${witchKillName}!`)
                                await convo.say(`‚õîB·∫°n ƒë√£ gi·∫øt ${witchKillName}!`);
                            }
                        }
                        // kill ho·∫∑c skip ƒë·ªÅu ch·∫°y ƒëo·∫°n code b√™n d∆∞·ªõi:
                        if (thereIsOneDied && gamef.getRoom(userRoom).witchSaveRemain && gamef.getRoom(userRoom).witchKillID != deathID) {
                            askForSaveKill(convo, true, `B·∫°n c√≥ quy·ªÅn c·ª©u: "/yes" hay "/no" ?`);
                        } else {
                            gamef.getRoom(userRoom).cancelSchedule();
                            dayNotify(gamef, bot, userRoom, false);
                        }
                    } else {
                        convo.say('```\nB·∫°n ƒë√£ h·∫øt quy·ªÅn gi·∫øt\n```');
                    }
                }
            }
        });
    };
    //Call ph√π th·ªßy khi: c√≤n ph√π th·ªßy
    if (gamef.getRoom(userRoom).witchID != undefined) {
        bot.conversation(gamef.getRoom(userRoom).witchID, async (convo) => {
            let time = undefined;
            if (gamef.getRoom(userRoom).witchSaveRemain || gamef.getRoom(userRoom).witchKillRemain) {
                if (thereIsOneDied) {
                    await convo.say(`\`\`\`\n*${deathTxt}* ƒë√£ CH·∫æT!\nB·∫°n c√≥ 45 gi√¢y ƒë·ªÉ quy·∫øt ƒë·ªãnh\n\`\`\``);
                    time = new Date(Date.now() + 45 * 1000);
                } else if (gamef.getRoom(userRoom).witchKillRemain) {
                    await convo.say(`\`\`\`\nƒê√™m qua kh√¥ng ai ch·∫øt!\nB·∫°n c√≥ 30 gi√¢y ƒë·ªÉ quy·∫øt ƒë·ªãnh\n\`\`\``);
                    time = new Date(Date.now() + 30 * 1000);
                }
                if (time) {
                    gamef.getRoom(userRoom).addSchedule(time, () => {
                        console.log(`$ ROOM ${userRoom + 1} > AUTO ROLE > WITCH`);
                        convo.say(`‚è∞B·∫°n ƒë√£ ng·ªß qu√™n, tr·ªùi s√°ng m·∫•t r·ªìi!\nB·∫°n kh√¥ng c√≤n c∆° h·ªôi c·ª©u n·ªØa!`);
                        gamef.getRoom(userRoom).getPlayer(gamef.getRoom(userRoom).soiNguyenID).afk(3);
                        convo.end();
                        dayNotify(gamef, bot, userRoom, false);
                    });
                }

                if (gamef.getRoom(userRoom).witchKillRemain) {
                    let playerListTxt = gamef.getRoom(userRoom).playersTxt.join(' / ');
                    askForSaveKill(convo, false, `ƒê·ªÉ d√πng quy·ªÅn gi·∫øt: "/kill <s·ªë id>"\nN·∫øu kh√¥ng gi·∫øt ai: "/skip"\n${playerListTxt}`);
                } else if (thereIsOneDied) {
                    askForSaveKill(convo, true, `B·∫°n c√≥ quy·ªÅn c·ª©u: "/yes" hay "/no" ?`);
                } else { // kh√¥ng c√≤n quy·ªÅn gi·∫øt v√† kh√¥ng ai ch·∫øt
                    convo.end();
                    dayNotify(gamef, bot, userRoom, false);
                }
            } else { // h·∫øt quy·ªÅn
                convo.end();
                dayNotify(gamef, bot, userRoom, false);
            }
        });
    } else { // kh√¥ng c√≥ ph√π th·ªßy
        dayNotify(gamef, bot, userRoom, false);
    }
}

module.exports = (gamef, bot, userRoom) => {
    gamef.getRoom(userRoom).roleIsDone((isDone) => {
        if (isDone) {
            gamef.getRoom(userRoom).findOutDeathID();
            let deathID = gamef.getRoom(userRoom).deathID;
            let deathTxt;
            if (deathID != -1) {
                deathTxt = gamef.getRoom(userRoom).playersTxt[deathID];
            }

            const askForNguyen = (convo) => {
                convo.ask({
                    text: `\`\`\`\n*${deathTxt}* ƒë√£ CH·∫æT!\nB·∫°n 30 gi√¢y ƒë·ªÉ quy·∫øt ƒë·ªãnh nguy·ªÅn hay kh√¥ng?\n("/yes" hay "/no)\n\`\`\``,
                    quickReplies: ['/yes', '/no'],
                }, async (payload, convo) => {
                    if (!payload.message || !(/(y|Y)es/g.test(payload.message.text) || /(n|N)o/g.test(payload.message.text))) {
                        convo.say(`\`\`\`\nKh√¥ng h·ª£p l·ªá!\n\`\`\``);
                        askForNguyen(convo);
                        return;
                    } else {
                        gamef.getRoom(userRoom).cancelSchedule();
                        if (/(y|Y)es/g.test(payload.message.text)) { // nguy·ªÅn, tr·ªùi s√°ng lu√¥n
                            gamef.getRoom(userRoom).nguyen(deathID);
                            convo.say(`B·∫°n ƒë√£ nguy·ªÅn th√†nh c√¥ng!`);
                            convo.end();
                            dayNotify(gamef, bot, userRoom, false);
                        } else { // kh√¥ng nguy·ªÅn, h·ªèi ph√π th·ªßy c·ª©u
                            convo.end();
                            callWitch(gamef, bot, userRoom, deathID, deathTxt, true);
                        }
                    }
                });
            };

            // ki·ªÉm tra c√≥ ng∆∞·ªùi ch·∫øt kh√¥ng?
            let thereIsOneDied = false;
            if (deathID != -1 && gamef.getRoom(userRoom).players[deathID] && gamef.getRoom(userRoom).players[deathID].role != -2 && gamef.getRoom(userRoom).players[deathID].role != 6 && deathID != gamef.getRoom(userRoom).saveID) {
                thereIsOneDied = true;
            }
            //Call s√≥i nguy·ªÅn
            if (thereIsOneDied && gamef.getRoom(userRoom).soiNguyen && gamef.getRoom(userRoom).soiNguyenID != undefined) {
                bot.conversation(gamef.getRoom(userRoom).soiNguyenID, async (convo) => {
                    let time = new Date(Date.now() + 30 * 1000);
                    gamef.getRoom(userRoom).addSchedule(time, () => {
                        console.log(`$ ROOM ${userRoom + 1} > AUTO ROLE > S√ìI NGUY·ªÄN`);
                        convo.say(`‚è∞B·∫°n ƒë√£ ng·ªß qu√™n, tr·ªùi s√°ng m·∫•t r·ªìi!\nB·∫°n kh√¥ng c√≤n c∆° h·ªôi nguy·ªÅn n·ªØa!`);
                        gamef.getRoom(userRoom).getPlayer(gamef.getRoom(userRoom).soiNguyenID).afk(3);
                        convo.end();
                        callWitch(gamef, bot, userRoom, deathID, deathTxt, true);
                    });
                    askForNguyen(convo);
                });
            } else {
                callWitch(gamef, bot, userRoom, deathID, deathTxt, thereIsOneDied);
            }
        }
    });
}